*vim-flexagon* Easy access to a variety of expression folds

================================================================================
CONTENTS                            *FlexagonContents*

    1. Introduction.................|FlexagonIntro|
    2. Commands.....................|FlexagonCommands|
    3. Folds........................|FlexagonFolds|
    4. Settings.....................|FlexagonSettings|
    5. Mappings.....................|FlexagonMapppins|

================================================================================
1. INTRODUCTION                                *FlexagonIntro*

Folding is a dark corner of vim, but potentially quite powerful. It's a
tool to hide "unimportant" text, but that skirts the question, "what is
unimportant". This plugin attempts to ease unlocking this power.

This plugin is (mostly) a wrapper around |foldexpr| allowing you to
easily specify a high level "hiding strategy". It exposes one command
*Fold:* which takes a folding argument. The options are exposed via tab
complete.


================================================================================
2. COMMANDS                                *FlexagonCommands*

                                           *:Fold*
:Fold [foldtype]      Choose a fold type with tab auto-complete

================================================================================
3. FOLDS                                   *FlexagonFolds*

wiki        Look for wiki style headers.
            These fold markers can be after comment markers.
            Header level's are recognized
            This makes a decent alternative to vim fold marks that's
            less obtrusive then vim's choice

header      Look for flowerpot style headers. One level of fold

space       Use blank lines as section/fold separators
            As a first order fold this works very well on a wide variety
            of files

comment     fold non-commented code

code        fold comments

braces      Use { and } as markers. For most C inspired code this is an
            easy first level fold

ini         Fold on INI style headers

html        Fold on H tags

manual      Reset to vim manual folding

indent      Reset to vim indent folding


================================================================================
4. SETTINGS                                *FlexagonSettings*

                                           *flexagon_disable_foldtext* 
I've added foldtext formatting that appeals to me. It's enabled by
default. Disable it as desired.

let g:flexagon_disable_foldtext = 1

================================================================================
4. MAPPINGS                                *FlexagonFolds*

Flexagon provides a utility "bubble" function to walk up and down top
lecel folds. By default there are mappings for ZJ and ZJ mirroring vim's
native zj and zk mappings. These two mapping are meant to walk through
folded code, expanding the next or last fold and closing the prior fold
The mappings use <unique> to avoid stepping on personal mappings.
There's no current vim mapping for those mappings. There are two <Plug>
mappings

<Plug>BubbleDown
<Plug>BubbleUp
